"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[6800],{8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>r});var o=s(6540);const n={},l=o.createContext(n);function i(e){const t=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(l.Provider,{value:t},e.children)}},9154:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"api/functions/get-model-for-class","title":"getModelForClass","description":"Typings:","source":"@site/../docs/api/functions/getModelForClass.md","sourceDirName":"api/functions","slug":"/api/functions/get-model-for-class","permalink":"/typegoose/versions/beta/docs/api/functions/get-model-for-class","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/api/functions/getModelForClass.md","tags":[],"version":"current","frontMatter":{"id":"get-model-for-class","title":"getModelForClass"},"sidebar":"docs","previous":{"title":"@queryMethod","permalink":"/typegoose/versions/beta/docs/api/decorators/query-method"},"next":{"title":"getClassForDocument","permalink":"/typegoose/versions/beta/docs/api/functions/get-class-for-document"}}');var n=s(4848),l=s(8453);const i={id:"get-model-for-class",title:"getModelForClass"},r=void 0,d={},c=[{value:"Example",id:"example",level:2}];function a(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Typings:"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"function getModelForClass<U extends AnyParamConstructor<any>, QueryHelpers = BeAnObject>(cl: U, options?: IModelOptions)\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"cl"})," ",(0,n.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.code,{children:"U"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The Class to build a Model from"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"options"})}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.code,{children:"IModelOptions"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Overwrite some Model options, only property ",(0,n.jsx)(t.code,{children:"schemaOptions"})," is merged with the existing options"]})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"getModelForClass"})," compiled a given Class (",(0,n.jsx)(t.code,{children:"cl"}),") into a ",(0,n.jsx)(t.code,{children:"mongoose.Model"}),", this function will return the existing model if a model of the same name has already been created and cached with ",(0,n.jsx)(t.a,{href:"/typegoose/versions/beta/docs/api/functions/add-model-to-typegoose",children:(0,n.jsx)(t.code,{children:"addModelToTypegoose"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.a,{href:"/typegoose/versions/beta/docs/api/decorators/model-options#imodeloptions",children:["All options for ",(0,n.jsx)(t.code,{children:"options"}),"."]})}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"class Kitten {\n  @prop()\n  public name?: string;\n}\n\nconst KittenModel = getModelForClass(Kitten);\n"})})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);