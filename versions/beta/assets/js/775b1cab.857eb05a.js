"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[6169],{6951:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api/functions/typeguards/is-ref-type","title":"isRefType & isRefTypeArray","description":"isRefType","source":"@site/../docs/api/functions/typeguards/isRefType.md","sourceDirName":"api/functions/typeguards","slug":"/api/functions/typeguards/is-ref-type","permalink":"/typegoose/versions/beta/docs/api/functions/typeguards/is-ref-type","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/api/functions/typeguards/isRefType.md","tags":[],"version":"current","frontMatter":{"id":"is-ref-type","title":"isRefType & isRefTypeArray"},"sidebar":"docs","previous":{"title":"isDocument & isDocumentArray","permalink":"/typegoose/versions/beta/docs/api/functions/typeguards/is-document"},"next":{"title":"DocumentType<T, QueryHelpers>","permalink":"/typegoose/versions/beta/docs/api/types/document-type"}}');var r=n(4848),i=n(8453);const l={id:"is-ref-type",title:"isRefType & isRefTypeArray"},d=void 0,c={},o=[{value:"isRefType",id:"isreftype",level:2},{value:"Example",id:"isreftype-example",level:2},{value:"isRefTypeArray",id:"isreftypearray",level:2},{value:"Overload 1",id:"isreftypearray-overload1",level:3},{value:"Overload 2",id:"isreftypearray-overload2",level:3},{value:"Description",id:"isreftypearray-description",level:3},{value:"Example",id:"isreftypearray-example",level:3},{value:"<code>AllowedRefTypes</code>",id:"allowedreftypes",level:2}];function a(e){const s={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"isreftype",children:"isRefType"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Typings:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"function isRefType<T, S extends RefType>(doc: Ref<T, S> | null | undefined, refType: AllowedRefTypes): doc is NonNullable<S>\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(s.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,r.jsx)(s.code,{children:"doc"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:(0,r.jsx)(s.code,{children:"Ref<T, S>"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"The Document to check"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,r.jsx)(s.code,{children:"refType"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:(0,r.jsx)(s.a,{href:"#allowedreftypes",children:(0,r.jsx)(s.code,{children:"AllowedRefTypes"})})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"The Expected Reference Type to test for"})]})]})]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"isRefType"})," checks if the given Input (",(0,r.jsx)(s.code,{children:"doc"}),") is of the given Type (",(0,r.jsx)(s.code,{children:"refType"}),").",(0,r.jsx)(s.br,{}),"\n","Option ",(0,r.jsx)(s.code,{children:"refType"})," is required because the known Reference Type only exists at compile time, not at runtime so it needs to be explicitly defined (to have accurate checks)."]}),"\n",(0,r.jsx)(s.h2,{id:"isreftype-example",children:"Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'class Cat {\n  @prop({ ref: \'Cat\' })\n  public partner: Ref<Cat>;\n\n  // this example could be smaller, but for demonstation purposes this is a longer version\n  public hasPartner(): boolean {\n    if (isRefType(this.partner, mongoose.Types.ObjectId)) {\n      // "this.partner" now has the type of "Cat._id"\'s RefType (in this case "ObjectId")\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:"-> this could be minified, but for demonstration purposes this will stay the long version"}),"\n",(0,r.jsx)(s.h2,{id:"isreftypearray",children:"isRefTypeArray"}),"\n",(0,r.jsx)(s.h3,{id:"isreftypearray-overload1",children:"Overload 1"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Typings:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"function isRefTypeArray<T, S extends RefType>(\n  docs: mongoose.Types.Array<Ref<T, S>> | undefined,\n  refType: AllowedRefTypes\n): docs is mongoose.Types.Array<NonNullable<S>>;\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(s.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,r.jsx)(s.code,{children:"docs"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:(0,r.jsx)(s.code,{children:"mongoose.Types.Array<Ref<T, S>>"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"The Array of Documents to check"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,r.jsx)(s.code,{children:"refType"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:(0,r.jsx)(s.a,{href:"#allowedreftypes",children:(0,r.jsx)(s.code,{children:"AllowedRefTypes"})})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"The Expected Reference Type to test for"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"isreftypearray-overload2",children:"Overload 2"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Typings:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"function isRefTypeArray<T, S extends RefType>(docs: Ref<T, S>[] | undefined, refType: AllowedRefTypes): docs is NonNullable<S>[];\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(s.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,r.jsx)(s.code,{children:"docs"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:(0,r.jsx)(s.code,{children:"Ref<T, S>[]"})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"The Array of Documents to check"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,r.jsx)(s.code,{children:"refType"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(s.td,{style:{textAlign:"center"},children:(0,r.jsx)(s.a,{href:"#allowedreftypes",children:(0,r.jsx)(s.code,{children:"AllowedRefTypes"})})}),(0,r.jsx)(s.td,{style:{textAlign:"left"},children:"The Expected Reference Type to test for"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"isreftypearray-description",children:"Description"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"isRefTypeArray"})," checks if ",(0,r.jsx)(s.strong,{children:"all"})," the items in the given Array (",(0,r.jsx)(s.code,{children:"docs"}),") are matching the given Reference type (",(0,r.jsx)(s.code,{children:"refType"}),").",(0,r.jsx)(s.br,{}),"\n","This function calls ",(0,r.jsx)(s.a,{href:"#isreftype",children:(0,r.jsx)(s.code,{children:"isRefType"})})," for each item in the array.",(0,r.jsx)(s.br,{}),"\n","Only returns ",(0,r.jsx)(s.code,{children:"true"})," if ",(0,r.jsx)(s.strong,{children:"all"})," items in the array return ",(0,r.jsx)(s.code,{children:"true"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"isreftypearray-example",children:"Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:'class Cat {\n  @prop({ ref: \'Cat\' })\n  public kittens: Ref<Cat>;\n\n  // this example could be smaller, but for demonstation purposes this is a longer version\n  public areAllKittensExisting(): boolean {\n    if (isRefTypeArray(this.kittens, mongoose.Types.ObjectId)) {\n      // "this.kittens" now has the type of "Cat._id"\'s RefType (in this case "ObjectId")\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"allowedreftypes",children:(0,r.jsx)(s.code,{children:"AllowedRefTypes"})}),"\n",(0,r.jsxs)(s.p,{children:["The Allowed Reference Types for ",(0,r.jsx)(s.code,{children:"isRefType"})," and ",(0,r.jsx)(s.code,{children:"isRefTypeArray"})," are:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"String"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"Number"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"Buffer"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"mongoose.Types.Buffer"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"mongoose.Types.ObjectId"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>d});var t=n(6540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);