"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[3418],{6055:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/types/utility-types","title":"Utility Types","description":"This document documents various smaller utility types","source":"@site/../docs/api/types/utility-types.md","sourceDirName":"api/types","slug":"/api/types/utility-types","permalink":"/typegoose/versions/beta/docs/api/types/utility-types","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/api/types/utility-types.md","tags":[],"version":"current","frontMatter":{"id":"utility-types","title":"Utility Types"},"sidebar":"docs","previous":{"title":"Additional Types","permalink":"/typegoose/versions/beta/docs/api/types/additional-types"}}');var i=n(4848),r=n(8453);const o={id:"utility-types",title:"Utility Types"},l=void 0,c={},d=[{value:"<code>FilterOutFunctionKeys&lt;T&gt;</code>",id:"filteroutfunctionkeyst",level:2}];function p(e){const t={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This document documents various smaller utility types"}),"\n",(0,i.jsx)(t.h2,{id:"filteroutfunctionkeyst",children:(0,i.jsx)(t.code,{children:"FilterOutFunctionKeys<T>"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Typings:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"type FilterOutFunctionKeys<T extends object> = Omit<T, GetFunctionKeys<T>>\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"T"})," ",(0,i.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:(0,i.jsx)(t.code,{children:"object"})}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"The type to filter functions out of"})]})})]}),"\n",(0,i.jsxs)(t.p,{children:["The type ",(0,i.jsx)(t.code,{children:"FilterOutFunctionKeys<T>"})," can be used where function types need to be filtered-out, for example for ",(0,i.jsx)(t.code,{children:"AnyBulkWriteOperation"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"class Kitten {\n  @prop()\n  public name?: string;\n\n  public getName() {\n    return this.name;\n  }\n}\n\ntype Normal = Pick<Kitten, typeof Kitten>;\n// type:\n// {\n//  name: string | undefined,\n//  getName: () => string\n// }\n\ntype Filtered = FilterOutFunctionKeys<Kitten>;\n// type:\n// {\n//   name: string | undefined\n// }\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This type ",(0,i.jsx)(t.em,{children:"may"})," be used in the future for ",(0,i.jsx)(t.code,{children:"DocumentType"}),"."]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);