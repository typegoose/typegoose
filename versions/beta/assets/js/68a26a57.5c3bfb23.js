"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[2535],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},9855:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>x,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api/decorators/indexes","title":"@index","description":"Typings:","source":"@site/../docs/api/decorators/indexes.md","sourceDirName":"api/decorators","slug":"/api/decorators/indexes","permalink":"/typegoose/versions/beta/docs/api/decorators/indexes","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/api/decorators/indexes.md","tags":[],"version":"current","frontMatter":{"id":"indexes","title":"@index"},"sidebar":"docs","previous":{"title":"@pre & @post","permalink":"/typegoose/versions/beta/docs/api/decorators/hooks"},"next":{"title":"@searchIndex","permalink":"/typegoose/versions/beta/docs/api/decorators/searchIndexes"}}');var i=t(4848),o=t(8453);const r={id:"indexes",title:"@index"},d=void 0,l={},c=[{value:"Example",id:"example",level:2},{value:"Extra",id:"extra",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Typings:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function index<T extends BeAnObject = BeAnObject>(fields: mongoose.IndexDefinition, options?: IndexOptions<T>): ClassDecorator\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,i.jsx)(n.code,{children:"fields"})," ",(0,i.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.code,{children:"mongoose.IndexDefinition"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"All Fields for this single index"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"options"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.a,{href:"https://mongodb.github.io/node-mongodb-native/6.2/interfaces/CreateIndexesOptions.html",children:(0,i.jsx)(n.code,{children:"IndexOptions<T>"})})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Overwrite Schema Options, merged with original schema options"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@index"})," is used to set indices on the schema, this decorator acts like ",(0,i.jsx)(n.code,{children:"schema.index()"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.a,{href:"https://docs.mongodb.com/manual/tutorial/control-results-of-text-search/",children:"Full-Text Search"})," option ",(0,i.jsx)(n.code,{children:"weights"})," all fields (from ",(0,i.jsx)(n.code,{children:"fields"}),") have to also be defined in ",(0,i.jsx)(n.code,{children:"weights"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"@index({ article: 1, user: 1 }, { unique: true }) // compound index\n@index({ location: '2dsphere' }) // single index with no options\n@index({ article: 1 }, { partialFilterExpression: { stars: { $gte: 4.5 } } }) // single index with options\nclass Location {\n  @prop()\n  public article?: number;\n\n  @prop()\n  public user?: number;\n\n  @prop()\n  public stars?: number;\n\n  @prop({ type: Number, dim: 2 })\n  public location?: number[][];\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"extra",children:"Extra"}),"\n",(0,i.jsxs)(n.p,{children:["Inheriting indexes from lower classes can be disabled with ",(0,i.jsxs)(n.a,{href:"/typegoose/versions/beta/docs/api/decorators/model-options#disablelowerindexes",children:["ModelOption ",(0,i.jsx)(n.code,{children:"disableLowerIndexes"})]}),"."]})]})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);