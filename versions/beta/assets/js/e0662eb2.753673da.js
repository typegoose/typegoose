"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[215],{8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>d});var a=o(6540);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}},9205:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"guides/advanced/manual-schema-modification","title":"Manual Schema Modification","description":"Sometimes manual schema modification is needed, this Guide will describe on how to do it.","source":"@site/../docs/guides/advanced/manual-schema-modification.md","sourceDirName":"guides/advanced","slug":"/guides/advanced/manual-schema-modification","permalink":"/typegoose/versions/beta/docs/guides/advanced/manual-schema-modification","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/guides/advanced/manual-schema-modification.md","tags":[],"version":"current","frontMatter":{"id":"manual-schema-modification","title":"Manual Schema Modification"},"sidebar":"guides","previous":{"title":"Typegoose\'s Name Generation","permalink":"/typegoose/versions/beta/docs/guides/advanced/name-generation"},"next":{"title":"Why overwrite \\"this\\"","permalink":"/typegoose/versions/beta/docs/guides/advanced/overwrite-this"}}');var n=o(4848),s=o(8453);const i={id:"manual-schema-modification",title:"Manual Schema Modification"},d=void 0,c={},l=[];function r(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Sometimes manual schema modification is needed, this Guide will describe on how to do it."}),"\n",(0,n.jsxs)(t.p,{children:["When wanting to get the schema of a class, but not the model yet, then ",(0,n.jsx)(t.a,{href:"/typegoose/versions/beta/docs/api/functions/build-schema",children:(0,n.jsx)(t.code,{children:"buildSchema"})})," should be used and ",(0,n.jsx)(t.a,{href:"/typegoose/versions/beta/docs/api/functions/add-model-to-typegoose",children:(0,n.jsx)(t.code,{children:"addModelToTypegoose"})})," to add it to the typegoose cache and get the correct types."]}),"\n",(0,n.jsx)(t.p,{children:"Example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:'// Normal Typegoose Class definition\nclass Cat {\n  @prop()\n  public name?: string;\n}\n\n// "buildSchema" is called like "getModelForClass"\n// "buildSchema" also supports overwriting options like "getModelForClass" (essentially "getModelForClass" passes the options to "buildSchema")\nconst CatSchema = buildSchema(Cat);\n\n// example modifying the schema before adding\n// in this case adding a virtual "getName"\nCatSchema.virtual("getName").get(function() { return this.name });\n\n// The Schema will have to be manually made into a model\nconst CatModelRaw = mongoose.model(getName(Cat), CatSchema);\n\n// And finally the model will get added to the typegoose cache with the class and also have proper types\n// essentially "addModelToTypegoose" re-exports the input model, but cast as the correct typegoose type\nexport const CatModel = addModelToTypegoose(CatModelRaw, Cat);\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Note: the example above uses ",(0,n.jsx)(t.a,{href:"/typegoose/versions/beta/docs/api/functions/get-name",children:(0,n.jsx)(t.code,{children:"getName"})})," to generate the name like typegoose does normally."]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)}}}]);