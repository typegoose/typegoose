"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[1153],{1470:(e,n,s)=>{s.d(n,{A:()=>w});var t=s(6540),o=s(4164),i=s(3104),r=s(6347),a=s(205),l=s(7485),c=s(1682),d=s(679);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:o}}=e;return{value:n,label:s,attributes:t,default:o}}))}(s);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function h(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:s}=e;const o=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,l.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(o.location.search);n.set(i,e),o.replace({...o.location,search:n.toString()})}),[i,o])]}function g(e){const{defaultValue:n,queryString:s=!1,groupId:o}=e,i=p(e),[r,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[c,u]=m({queryString:s,groupId:o}),[g,f]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,i]=(0,d.Dv)(s);return[o,(0,t.useCallback)((e=>{s&&i.set(e)}),[s,i])]}({groupId:o}),b=(()=>{const e=c??g;return h({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{b&&l(b)}),[b]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,i]),tabValues:i}}var f=s(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=s(4848);function x(e){let{className:n,block:s,selectedValue:t,selectValue:r,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,s=l.indexOf(n),o=a[s].value;o!==t&&(c(n),r(o))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":s},n),children:a.map((e=>{let{value:n,label:s,attributes:i}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...i,className:(0,o.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function j(e){let{lazy:n,children:s,selectedValue:i}=e;const r=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=g(e);return(0,y.jsxs)("div",{className:(0,o.A)("tabs-container",b.tabList),children:[(0,y.jsx)(x,{...n,...e}),(0,y.jsx)(j,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,y.jsx)(v,{...e,children:u(e.children)},String(n))}},7602:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"guides/quick-start-guide","title":"Quick Start Guide","description":"Quick Overview of Typegoose","source":"@site/../docs/guides/quick-start-guide.md","sourceDirName":"guides","slug":"/guides/quick-start-guide","permalink":"/typegoose/versions/beta/docs/guides/quick-start-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/guides/quick-start-guide.md","tags":[],"version":"current","frontMatter":{"id":"quick-start-guide","title":"Quick Start Guide"},"sidebar":"guides","next":{"title":"FAQ","permalink":"/typegoose/versions/beta/docs/guides/faq"}}');var o=s(4848),i=s(8453),r=s(1470),a=s(9365);const l={id:"quick-start-guide",title:"Quick Start Guide"},c=void 0,d={},u=[{value:"Quick Overview of Typegoose",id:"quick-overview-of-typegoose",level:2},{value:"How to Start using typegoose",id:"how-to-start-using-typegoose",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Install",id:"install",level:3},{value:"How to use Typegoose",id:"how-to-use-typegoose",level:3},{value:"Do&#39;s and Don&#39;ts of Typegoose",id:"dos-and-donts-of-typegoose",level:2},{value:"Extra Examples",id:"extra-examples",level:2},{value:"Static Methods",id:"static-methods",level:3},{value:"Instance Methods",id:"instance-methods",level:3},{value:"Hooks",id:"hooks",level:3}];function p(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"quick-overview-of-typegoose",children:"Quick Overview of Typegoose"}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"This Guide is for Typegoose version ~12.0"})}),"\n",(0,o.jsx)(n.p,{children:'Typegoose is a "wrapper" for easily writing Mongoose models with TypeScript.'}),"\n",(0,o.jsx)(n.p,{children:"Instead of writing this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// This is a representation of how typegoose's compile output would look\ninterface Car {\n  model?: string;\n}\n\ninterface Job {\n  title?: string;\n  position?: string;\n}\n\ninterface User {\n  name?: string;\n  age!: number;\n  preferences?: string[];\n  mainJob?: Job;\n  jobs?: Job[];\n  mainCar?: Car | string;\n  cars?: (Car | string)[];\n}\n\nconst JobSchema = new mongoose.Schema({\n  title: String;\n  position: String;\n});\n\nconst CarModel = mongoose.model('Car', {\n  model: String,\n});\n\nconst UserModel = mongoose.model('User', {\n  name: { type: String },\n  age: { type: Number, required: true },\n  preferences: [{ type: String }],\n  mainJob: { type: JobSchema },\n  jobs: [{ type: JobSchema }],\n  mainCar: { type: Schema.Types.ObjectId, ref: 'Car' },\n  cars: [{ type: Schema.Types.ObjectId, ref: 'Car' }],\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can just write this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"class Job {\n  @prop()\n  public title?: string;\n\n  @prop()\n  public position?: string;\n}\n\nclass Car {\n  @prop()\n  public model?: string;\n}\n\nclass User {\n  @prop()\n  public name?: string;\n\n  @prop({ required: true })\n  public age!: number; // This is a single Primitive\n\n  @prop({ type: () => [String] })\n  public preferences?: string[]; // This is a Primitive Array\n\n  @prop()\n  public mainJob?: Job; // This is a single SubDocument\n\n  @prop({ type: () => [Job] })\n  public jobs?: Job[]; // This is a SubDocument Array\n\n  @prop({ ref: () => Car })\n  public mainCar?: Ref<Car>; // This is a single Reference\n\n  @prop({ ref: () => Car })\n  public cars?: Ref<Car>[]; // This is a Reference Array\n}\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"type"})," has to be defined when working with Arrays, because Reflection only returns basic information. ",(0,o.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/issues/7169",children:"Look here for why"}),(0,o.jsx)(n.br,{}),"\n","Like ",(0,o.jsx)(n.code,{children:"public: string[]"})," is in reflection only ",(0,o.jsx)(n.code,{children:"Array"}),"."]})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-",children:["Look here for what ",(0,o.jsx)(n.code,{children:"!"})," means on a property"]}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsxs)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/2/functions.html#optional-parameters",children:["Look here for what ",(0,o.jsx)(n.code,{children:"?"})," means on a property"]})]}),"\n",(0,o.jsx)(n.h2,{id:"how-to-start-using-typegoose",children:"How to Start using typegoose"}),"\n",(0,o.jsx)(n.h3,{id:"requirements",children:"Requirements"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["TypeScript version ",(0,o.jsx)(n.code,{children:"^5.4"})," is recommended, though older ones may also work"]}),"\n",(0,o.jsxs)(n.li,{children:["NodeJS ",(0,o.jsx)(n.code,{children:">=16.20.1"})," (and ",(0,o.jsx)(n.code,{children:"@types/node@16"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["Mongoose ",(0,o.jsx)(n.code,{children:"~8.18.0"})]}),"\n",(0,o.jsx)(n.li,{children:"A IDE that supports TypeScript linting is recommended to be used (VSCode is recommended)"}),"\n",(0,o.jsx)(n.li,{children:"This Guide expects you to know how Mongoose (or at least its models) works"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"experimentalDecorators"})," and ",(0,o.jsx)(n.code,{children:"emitDecoratorMetadata"})," must be enabled in ",(0,o.jsx)(n.code,{children:"tsconfig.json"})]}),"\n",(0,o.jsxs)(n.li,{children:["tsconfig option ",(0,o.jsx)(n.code,{children:"target"})," being at least ",(0,o.jsx)(n.code,{children:"es6"}),", recommended is ",(0,o.jsx)(n.code,{children:"es2021"})]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["tsconfig option ",(0,o.jsx)(n.code,{children:"emitDecoratorMetadata"})," is not strictly required, look ",(0,o.jsx)(n.a,{href:"/typegoose/versions/beta/docs/guides/use-without-emitDecoratorMetadata",children:"here"})," for more"]})}),"\n",(0,o.jsx)(n.h3,{id:"install",children:"Install"}),"\n",(0,o.jsxs)(r.A,{groupId:"npm2yarn",children:[(0,o.jsx)(a.A,{value:"npm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install --save @typegoose/typegoose # install typegoose itself\n\nnpm install --save mongoose # install peer-dependency mongoose\n"})})}),(0,o.jsx)(a.A,{value:"yarn",label:"Yarn",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn add @typegoose/typegoose # install typegoose itself\n\nyarn add mongoose # install peer-dependency mongoose\n"})})}),(0,o.jsx)(a.A,{value:"pnpm",label:"pnpm",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pnpm add @typegoose/typegoose # install typegoose itself\n\npnpm add mongoose # install peer-dependency mongoose\n"})})}),(0,o.jsx)(a.A,{value:"bun",label:"Bun",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"bun add @typegoose/typegoose # install typegoose itself\n\nbun add mongoose # install peer-dependency mongoose\n"})})})]}),"\n",(0,o.jsx)(n.h3,{id:"how-to-use-typegoose",children:"How to use Typegoose"}),"\n",(0,o.jsx)(n.p,{children:"Let's say you have a Mongoose model like this one:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const kittenSchema = new mongoose.Schema({\n  name: String\n});\n\nconst KittenModel = mongoose.model('Kitten', kittenSchema);\n\nlet document = await KittenModel.create({ name: 'Kitty' });\n// \"document\" has basic mongoose inferred types\n"})}),"\n",(0,o.jsx)(n.p,{children:"With Typegoose, it can be converted to something like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"class KittenClass {\n  @prop()\n  public name?: string;\n}\n\nconst KittenModel = getModelForClass(KittenClass);\n\nlet document = await KittenModel.create({ name: 'Kitty' });\n// \"document\" has proper (manual) typescript types of KittenClass\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"new KittenModel({} /*<-- this here*/)"})," will have type suggestions, but they are ",(0,o.jsx)(n.em,{children:"not enforced"}),", ",(0,o.jsx)(n.a,{href:"/typegoose/versions/beta/docs/guides/faq#why-does-new-model-not-have-types",children:"read more here"}),"."]})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Since around mongoose 6.0, mongoose can infer types mostly from the schema definition, but it is still not perfect and arguably less overview-able than typegoose's style of classes.",(0,o.jsx)(n.br,{}),"\n","Also tsdoc comments are not transferred when using mongoose's inferred types."]})}),"\n",(0,o.jsx)(n.h2,{id:"dos-and-donts-of-typegoose",children:"Do's and Don'ts of Typegoose"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Typegoose is a wrapper for Mongoose's models & schemas"}),"\n",(0,o.jsx)(n.li,{children:"Typegoose does not modify any functions of Mongoose"}),"\n",(0,o.jsx)(n.li,{children:"Typegoose aims to get Mongoose's models to be stable through type-information from classes (without defining extra interfaces)"}),"\n",(0,o.jsx)(n.li,{children:"Typegoose aims to make Mongoose more usable by making the models more type-rich with TypeScript"}),"\n",(0,o.jsxs)(n.li,{children:["Decorated schema configuration classes (like ",(0,o.jsx)(n.code,{children:"KittenClass"})," above) must use explicit type declarations"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"extra-examples",children:"Extra Examples"}),"\n",(0,o.jsx)(n.h3,{id:"static-methods",children:"Static Methods"}),"\n",(0,o.jsx)(n.p,{children:"Sometimes extra functions for model creation or pre-written queries are needed, they can be done as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"class KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n\n  // the \"this\" definition is required to have the correct types\n  public static async findBySpecies(this: ReturnModelType<typeof KittenClass>, species: string) {\n    return this.find({ species }).exec();\n  }\n}\nconst KittenModel = getModelForClass(KittenClass);\n\nconst docs = await KittenModel.findBySpecies('SomeSpecies');\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["pre-6.0 static functions needed ",(0,o.jsx)(n.code,{children:"@staticMethod"}),", but this is not needed anymore."]})}),"\n",(0,o.jsx)(n.h3,{id:"instance-methods",children:"Instance Methods"}),"\n",(0,o.jsx)(n.p,{children:"Sometimes extra functions for manipulating data on an instance are needed, they can be done as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"class KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n\n  // the \"this\" definition is required to have the correct types\n  public async setSpeciesAndSave(this: DocumentType<KittenClass>, species: string) {\n    this.species = species;\n    await this.save();\n  }\n}\nconst KittenModel = getModelForClass(KittenClass);\n\nconst doc = new KittenModel({ name: 'SomeCat', species: 'SomeSpecies' });\nawait doc.setSpeciesAndSave('SomeOtherSpecies');\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Pre-6.0 static functions needed ",(0,o.jsx)(n.code,{children:"@instanceMethod"}),", but this is not needed anymore."]})}),"\n",(0,o.jsx)(n.h3,{id:"hooks",children:"Hooks"}),"\n",(0,o.jsx)(n.p,{children:"Typegoose also supports hooks. They can be used like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"@pre<KittenClass>('save', function() {\n  this.isKitten = this.age < 1\n})\n@post<KittenClass>('save', function(kitten) {\n  console.log(kitten.isKitten ? 'We have a kitten here.' : 'We have a big kitty here.')\n})\nclass KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n  \n  @prop()\n  public age?: number\n  \n  @prop({ default: false })\n  public isKitten?: boolean\n}\n\nconst KittenModel = getModelForClass(KittenClass);\n\nconst doc = new KittenModel({ name: 'SomeCat', species: 'SomeSpecies', age: 0 });\nawait doc.save(); // this should output \"We have a kitten here.\"\nconst doc = new KittenModel({ name: 'SomeCat', species: 'SomeSpecies', age: 2 });\nawait doc.save(); // this should output \"We have a big kitty here.\"\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For detailed explanation of Hooks, please see ",(0,o.jsx)(n.a,{href:"/typegoose/versions/beta/docs/api/decorators/hooks",children:"Hooks"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Note:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Do not use Arrow Functions, because it will break the binding of ",(0,o.jsx)(n.code,{children:"this"})]}),"\n",(0,o.jsxs)(n.li,{children:["For ESLint users: Make sure that rule ",(0,o.jsx)(n.code,{children:"eslint-no-use-before-defining"})," is disabled, otherwise you might get ESLint errors / warnings inside the hooks"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}},9365:(e,n,s)=>{s.d(n,{A:()=>r});s(6540);var t=s(4164);const o={tabItem:"tabItem_Ymn6"};var i=s(4848);function r(e){let{children:n,hidden:s,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,r),hidden:s,children:n})}}}]);