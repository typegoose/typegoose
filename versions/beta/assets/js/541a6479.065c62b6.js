"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[436],{1470:(e,n,s)=>{s.d(n,{A:()=>w});var t=s(6540),r=s(4164),o=s(3104),a=s(6347),i=s(205),l=s(7485),c=s(1682),u=s(679);function p(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:r}}=e;return{value:n,label:s,attributes:t,default:r}}))}(s);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function h(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:s}=e;const r=(0,a.W6)(),o=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,l.aZ)(o),(0,t.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function m(e){const{defaultValue:n,queryString:s=!1,groupId:r}=e,o=d(e),[a,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[c,p]=g({queryString:s,groupId:r}),[m,f]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,u.Dv)(s);return[r,(0,t.useCallback)((e=>{s&&o.set(e)}),[s,o])]}({groupId:r}),b=(()=>{const e=c??m;return h({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{b&&l(b)}),[b]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),f(e)}),[p,f,o]),tabValues:o}}var f=s(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=s(4848);function y(e){let{className:n,block:s,selectedValue:t,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),u=e=>{const n=e.currentTarget,s=l.indexOf(n),r=i[s].value;r!==t&&(c(n),a(r))},p=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":s},n),children:i.map((e=>{let{value:n,label:s,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{l.push(e)},onKeyDown:p,onClick:u,...o,className:(0,r.A)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function v(e){let{lazy:n,children:s,selectedValue:o}=e;const a=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function j(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,x.jsx)(y,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,x.jsx)(j,{...e,children:p(e.children)},String(n))}},5136:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"guides/nesting-classes","title":"Nesting Classes","description":"Differences from Mongoose","source":"@site/../docs/guides/nesting-classes.mdx","sourceDirName":"guides","slug":"/guides/nesting-classes","permalink":"/typegoose/versions/beta/docs/guides/nesting-classes","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/guides/nesting-classes.mdx","tags":[],"version":"current","frontMatter":{"id":"nesting-classes","title":"Nesting Classes"},"sidebar":"guides","previous":{"title":"Default Classes","permalink":"/typegoose/versions/beta/docs/guides/default-classes"},"next":{"title":"Custom Types","permalink":"/typegoose/versions/beta/docs/guides/advanced/custom-types"}}');var r=s(4848),o=s(8453),a=s(1470),i=s(9365);const l={id:"nesting-classes",title:"Nesting Classes"},c=void 0,u={},p=[{value:"Differences from Mongoose",id:"differences-from-mongoose",level:3},{value:"Using the Passthrough Class",id:"using-the-passthrough-class",level:3},{value:"Difference to References",id:"difference-to-references",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"differences-from-mongoose",children:"Differences from Mongoose"}),"\n",(0,r.jsx)(n.p,{children:"Typegoose Nesting is slightly different from mongoose, the following will show a basic mongoose schema which has nesting and how it would be translated to typegoose."}),"\n",(0,r.jsxs)(a.A,{groupId:"mongoose-typegoose",children:[(0,r.jsx)(i.A,{value:"mongoose",label:"Mongoose",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const AnimalSchema = new mongoose.Schema({\n  name: String,\n  properties: {\n    hasEaten: Boolean,\n    nicknames: [String]\n  }\n});\n"})})}),(0,r.jsx)(i.A,{value:"typegoose",label:"Typegoose",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public properties?: Properties;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n}\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["It is required to put nested properties in their own class because of how typescript reflection works, it currently just translates ",(0,r.jsx)(n.code,{children:"{ someprop: string }"})," to ",(0,r.jsx)(n.code,{children:"Object"})," in reflection."]}),"\n",(0,r.jsx)(n.p,{children:"Also, under the hood, typegoose creates the schemas that would be equivalent to writing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const PropertiesSchema = new mongoose.Schema({\n  hasEaten: {\n    type: Boolean\n  },\n  nicknames: [{\n    type: String\n  }]\n});\n\nconst AnimalSchema = new mongoose.Schema({\n  name: {\n    type: String\n  },\n  properties: {\n    type: PropertiesSchema\n  }\n});\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:['Typegoose does not support native "nested paths" (unless using ',(0,r.jsx)(n.a,{href:"#using-the-passthrough-class",children:(0,r.jsx)(n.code,{children:"Passthrough"})}),"), each class in typegoose will be a nested schema (each class is its own ",(0,r.jsx)(n.code,{children:"Schema"})," instance), so it is not a 1:1 translation of the initial mongoose example to typegoose, but similar enough to initially think that way."]})}),"\n",(0,r.jsx)(n.h3,{id:"using-the-passthrough-class",children:"Using the Passthrough Class"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["It is not recommended to use the ",(0,r.jsx)(n.code,{children:"Passthrough"})," Class unless explicitly required to workaround something. In case you have found a problem that could only be solved with the Passthrough class, please open a new issue in the ",(0,r.jsx)(n.a,{href:"https://github.com/typegoose/typegoose/",children:"typegoose repository"})," so that we can fix having to use the Passthrough Class."]})}),"\n",(0,r.jsxs)(n.p,{children:["In Typegoose there also exists a special class called ",(0,r.jsx)(n.a,{href:"/typegoose/versions/beta/docs/api/decorators/prop#passthrough-class",children:(0,r.jsx)(n.code,{children:"Passthrough"})})," which can be used to write a mongoose schema-like directly, without typegoose processing it."]}),"\n",(0,r.jsxs)(n.p,{children:["Here is a Example of how a mongoose schema would look like writing it with ",(0,r.jsx)(n.code,{children:"Passthrough"}),":"]}),"\n",(0,r.jsxs)(a.A,{groupId:"mongoose-typegoose",children:[(0,r.jsxs)(i.A,{value:"mongoose",label:"Mongoose",default:!0,children:[(0,r.jsx)(n.p,{children:"Mongoose Initial Schema:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const AnimalSchema = new mongoose.Schema({\n  name: String,\n  properties: {\n    hasEaten: Boolean,\n    nicknames: [String]\n  }\n});\n"})})]}),(0,r.jsxs)(i.A,{value:"typegoose",label:"Typegoose",children:[(0,r.jsxs)(n.p,{children:["And the Typegoose Equivalent with ",(0,r.jsx)(n.code,{children:"Passthrough"})," (using the ",(0,r.jsx)(n.a,{href:"/typegoose/versions/beta/docs/api/decorators/prop#passthrough-direct",children:(0,r.jsx)(n.code,{children:"Direct"})})," mode):"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop({ type: () => new Passthrough({ hasEaten: Boolean, nicknames: [String] }, true) })\n  public properties?: { hasEaten: boolean, nicknames: string[] };\n}\n"})})]})]}),"\n",(0,r.jsxs)(n.p,{children:["With ",(0,r.jsx)(n.code,{children:"Passthrough"})," and the ",(0,r.jsx)(n.code,{children:"Direct"})," mode, the typegoose class above is fully equivalent in how it is given to mongoose as the mongoose schema example."]}),"\n",(0,r.jsx)(n.h3,{id:"difference-to-references",children:"Difference to References"}),"\n",(0,r.jsx)(n.p,{children:"In Typegoose, references and subdocuments are written similarly:"}),"\n",(0,r.jsxs)(a.A,{groupId:"diff-reference",children:[(0,r.jsx)(i.A,{value:"ref-subdoc",label:"Subdocument",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public properties?: Properties;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n}\n"})})}),(0,r.jsx)(i.A,{value:"ref-ref",label:"Reference",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"class Animal {\n  @prop()\n  public name?: string;\n\n  @prop({ ref: () => Properties })\n  public properties?: Ref<Properties>;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n}\n"})})}),(0,r.jsx)(i.A,{value:"diff",label:"Difference",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"class Animal {\n  @prop()\n  public name?: string;\n\n-   @prop()\n-   public properties?: Properties;\n+   @prop({ ref: () => Properties })\n+   public properties?: Ref<Properties>;\n}\n\nclass Properties {\n  @prop()\n  public hasEaten?: boolean;\n\n  @prop({ type: String })\n  public nicknames?: string[];\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["For more on referencing other classes, read ",(0,r.jsx)(n.a,{href:"/typegoose/versions/beta/docs/guides/advanced/reference-other-classes",children:"Reference other Classes"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(6540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},9365:(e,n,s)=>{s.d(n,{A:()=>a});s(6540);var t=s(4164);const r={tabItem:"tabItem_Ymn6"};var o=s(4848);function a(e){let{children:n,hidden:s,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,a),hidden:s,children:n})}}}]);