"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[5854],{6566:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"api/types/document-type","title":"DocumentType<T, QueryHelpers>","description":"Type DocumentType","source":"@site/../docs/api/types/documentType.md","sourceDirName":"api/types","slug":"/api/types/document-type","permalink":"/typegoose/versions/beta/docs/api/types/document-type","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/api/types/documentType.md","tags":[],"version":"current","frontMatter":{"id":"document-type","title":"DocumentType<T, QueryHelpers>"},"sidebar":"docs","previous":{"title":"isRefType & isRefTypeArray","permalink":"/typegoose/versions/beta/docs/api/functions/typeguards/is-ref-type"},"next":{"title":"ReturnModelType<T, QueryHelpers>","permalink":"/typegoose/versions/beta/docs/api/types/return-model-type"}}');var r=n(4848),c=n(8453);const l={id:"document-type",title:"DocumentType<T, QueryHelpers>"},d=void 0,o={},i=[{value:"Type <code>DocumentType</code>",id:"type-documenttype",level:2},{value:"Helper Type <code>SubDocumentType</code>",id:"helper-type-subdocumenttype",level:2},{value:"Helper Type <code>ArraySubDocumentType</code>",id:"helper-type-arraysubdocumenttype",level:2}];function a(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h2,{id:"type-documenttype",children:["Type ",(0,r.jsx)(t.code,{children:"DocumentType"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Typings:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"type DocumentType<T, QueryHelpers = BeAnObject>\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:"T"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"object"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The Class to get a document of"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"QueryHelpers"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"/typegoose/versions/beta/docs/api/decorators/query-method",children:(0,r.jsx)(t.code,{children:"QueryHelpers"})})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Add Query Helpers to the type"})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["The Type ",(0,r.jsx)(t.code,{children:"DocumentType<T>"})," is the type used for Documents.",(0,r.jsx)(t.br,{}),"\n","This type is the logical AND of ",(0,r.jsx)(t.code,{children:"mongoose.Document"})," and ",(0,r.jsx)(t.code,{children:"T"}),"."]}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["With this type, ",(0,r.jsx)(t.code,{children:"typeof Class"})," cannot be used."]})}),"\n",(0,r.jsx)(t.admonition,{type:"warning",children:(0,r.jsxs)(t.p,{children:["If the current project's tsconfig also includes ",(0,r.jsx)(t.code,{children:"compilerOptions.lib"})," with ",(0,r.jsx)(t.code,{children:"dom"}),", then the types from Typegoose and Typescript will conflict.",(0,r.jsx)(t.br,{}),"\n","Solution is to remove ",(0,r.jsx)(t.code,{children:"dom"})," from the ",(0,r.jsx)(t.code,{children:"lib"})," array."]})}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'class Kitten {\n  @prop()\n  public name?: string;\n\n  // this is an Instance Method\n  public getName(this: DocumentType<Kitten>) {\n    return this.name; // thanks to "DocumentType" "this" has type information\n  }\n}\n'})}),"\n",(0,r.jsxs)(t.h2,{id:"helper-type-subdocumenttype",children:["Helper Type ",(0,r.jsx)(t.code,{children:"SubDocumentType"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Typings:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"type SubDocumentType<T, QueryHelpers = BeAnObject>\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:"T"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"object"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The Class to get a document of"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"QueryHelpers"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"/typegoose/versions/beta/docs/api/decorators/query-method",children:(0,r.jsx)(t.code,{children:"QueryHelpers"})})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Add Query Helpers to the type"})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["The Type to use for subdocuments, when extra functions like ",(0,r.jsx)(t.code,{children:".parent"})," or document functions are necessary.",(0,r.jsx)(t.br,{}),"\n","This type is a logical AND of ",(0,r.jsx)(t.code,{children:"DocumentType"})," and ",(0,r.jsx)(t.code,{children:"mongoose.Types.SubDocument"})]}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'class Place {\n  @prop()\n  public name?: string;\n}\n\nclass Cat {\n  @prop({ type: () => Place })\n  public favoritePlace!: SubDocumentType<Place>;\n}\n\nconst CatModel = getModelForClass(Cat);\n\nconst catdoc = new CatModel({ favoritePlace: { name: "countertop" } })\n\ncatdoc.favoritePlace.parent() === catdoc;\n'})}),"\n",(0,r.jsxs)(t.h2,{id:"helper-type-arraysubdocumenttype",children:["Helper Type ",(0,r.jsx)(t.code,{children:"ArraySubDocumentType"})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Typings:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"type ArraySubDocumentType<T, QueryHelpers = BeAnObject>\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:"T"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"object"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The Class to get a document of"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"QueryHelpers"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"/typegoose/versions/beta/docs/api/decorators/query-method",children:(0,r.jsx)(t.code,{children:"QueryHelpers"})})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Add Query Helpers to the type"})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["The Type to use for subdocuments in arrays, when extra functions like ",(0,r.jsx)(t.code,{children:".parent"})," / ",(0,r.jsx)(t.code,{children:".parentArray"})," or document functions are necessary.",(0,r.jsx)(t.br,{}),"\n","This type is a logical AND of ",(0,r.jsx)(t.code,{children:"DocumentType"})," and ",(0,r.jsx)(t.code,{children:"mongoose.Types.ArraySubdocument"})]}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'class Place {\n  @prop()\n  public name?: string;\n}\n\nclass Cat {\n  @prop({ type: () => Place })\n  public favoritePlaces!: ArraySubDocumentType<Place>[];\n}\n\nconst CatModel = getModelForClass(Cat);\n\nconst catdoc = new CatModel({ favoritePlaces: [{ name: "countertop" }, { name: "printer" }]})\n\ncatdoc.favoritePlaces[0].parent() === catdoc;\ncatdoc.favoritePlaces[0].parentArray() === catdoc.favoritePlaces;\n'})})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var s=n(6540);const r={},c=s.createContext(r);function l(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);