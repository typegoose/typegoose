"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[572],{8322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/decorators/query-method","title":"@queryMethod","description":"Typings:","source":"@site/../docs/api/decorators/queryMethod.md","sourceDirName":"api/decorators","slug":"/api/decorators/query-method","permalink":"/typegoose/versions/beta/docs/api/decorators/query-method","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/api/decorators/queryMethod.md","tags":[],"version":"current","frontMatter":{"id":"query-method","title":"@queryMethod"},"sidebar":"docs","previous":{"title":"@plugin","permalink":"/typegoose/versions/beta/docs/api/decorators/plugin"},"next":{"title":"getModelForClass","permalink":"/typegoose/versions/beta/docs/api/functions/get-model-for-class"}}');var r=n(4848),o=n(8453);const d={id:"query-method",title:"@queryMethod"},i=void 0,l={},a=[{value:"Example",id:"example",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Typings:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"function queryMethod<QueryHelpers, U extends AnyParamConstructor<any>>(\n  func: (this: QueryHelperThis<U, QueryHelpers>, ...params: any[]) => Query<any, any>\n): ClassDecorator\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:"func"})," ",(0,r.jsx)("span",{class:"badge badge--secondary",children:"Required"})]}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"(this: QueryHelperThis<U, QueryHelpers>, ...params: any[]) => Query<any, any>"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The Function to add as a Query Method"})]})})]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"@queryMethod"})," is used to add ",(0,r.jsx)(t.a,{href:"https://thecodebarbarian.com/mongoose-custom-query-methods",children:"Custom Query Methods"}),"."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.code,{children:"func"})," Parameters:"]})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"this"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"QueryHelperThis<U, QueryHelpers>"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The Current Query, with Query Helpers available"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"...params"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"any[]"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Extra Parameters defined by the Query Helper to be added"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:"=>"})," (Return Type)"]}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"mongoose.Query"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"A Mongoose Query has to be returned from the Query Helper"})]})]})]}),"\n",(0,r.jsx)(t.admonition,{type:"warning",children:(0,r.jsxs)(t.p,{children:["A Named function has do be used, it also cannot be a Arrow-Function (",(0,r.jsx)(t.code,{children:"() => any"}),"), because the Query can only be accessed with ",(0,r.jsx)(t.code,{children:"this"})," and a name has to be supplied to be callable later on. (see Example below)"]})}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'import { types } from "@typegoose/typegoose";\n\n// an interface is needed to add query-function types to the class\ninterface QueryHelpers {\n  // use the actual function types dynamically\n  findByName: types.AsQueryMethod<typeof findByName>;\n  // the same can be done with other functions (not listed in this example)\n  findByLastname: types.AsQueryMethod<typeof findByLastname>;\n}\n\nfunction findByName(this: types.QueryHelperThis<typeof Person, QueryHelpers>, name: string) {\n  return this.find({ name }); // it is important to not do a "await" and ".exec"\n}\n@queryMethod(findByName)\nclass Person {\n  @prop({ required: true })\n  public name: string;\n}\nconst PersonModel = getModelForClass<typeof Person, QueryHelpers>(Person);\n\n// thanks to "QueryHelpers" the function "findByName" should exist here and return the correct type\nconst docs: types.DocumentType<Person>[] = await PersonModel.find()\n  .findByName(\'hello\')\n  .orFail()\n  .exec();\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var s=n(6540);const r={},o=s.createContext(r);function d(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);