"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[7202],{1470:(e,n,t)=>{t.d(n,{A:()=>C});var o=t(6540),s=t(4164),a=t(3104),l=t(6347),i=t(205),r=t(7485),c=t(1682),d=t(679);function u(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:s}}=e;return{value:n,label:t,attributes:o,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const s=(0,l.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,r.aZ)(a),(0,o.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=m(e),[l,r]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:a}))),[c,u]=p({queryString:t,groupId:s}),[g,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,a]=(0,d.Dv)(t);return[s,(0,o.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:s}),f=(()=>{const e=c??g;return h({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{f&&r(f)}),[f]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);r(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var b=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function j(e){let{className:n,block:t,selectedValue:o,selectValue:l,tabValues:i}=e;const r=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=e=>{const n=e.currentTarget,t=r.indexOf(n),s=i[t].value;s!==o&&(c(n),l(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=r.indexOf(e.currentTarget)+1;n=r[t]??r[0];break}case"ArrowLeft":{const t=r.indexOf(e.currentTarget)-1;n=r[t]??r[r.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>{r.push(e)},onKeyDown:u,onClick:d,...a,className:(0,s.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function C(e){const n=(0,b.A)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},3927:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"guides/advanced/models-with-same-name","title":"Models with same name","description":"This Guide shows all the possibilities for a model to use different names.","source":"@site/../docs/guides/advanced/models-with-same-name.mdx","sourceDirName":"guides/advanced","slug":"/guides/advanced/models-with-same-name","permalink":"/typegoose/versions/beta/docs/guides/advanced/models-with-same-name","draft":false,"unlisted":false,"editUrl":"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/guides/advanced/models-with-same-name.mdx","tags":[],"version":"current","frontMatter":{"id":"models-with-same-name","title":"Models with same name"},"sidebar":"guides","previous":{"title":"Array Types & Fields","permalink":"/typegoose/versions/beta/docs/guides/advanced/array-types"},"next":{"title":"Reference other Classes","permalink":"/typegoose/versions/beta/docs/guides/advanced/reference-other-classes"}}');var s=t(4848),a=t(8453),l=t(1470),i=t(9365);const r={id:"models-with-same-name",title:"Models with same name"},c=void 0,d={},u=[{value:"SchemaOptions collection",id:"schemaoptions-collection",level:2},{value:"Typegoose Custom Options &quot;customName&quot;",id:"typegoose-custom-options-customname",level:2},{value:"Disable Caching",id:"disable-caching",level:2},{value:"Notes",id:"notes",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This Guide shows all the possibilities for a model to use different names."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"If Classes with the same name are wanted, these methods need to be used so that Typegoose can differentiate between them"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Since ",(0,s.jsx)(n.code,{children:"7.6.0"})," the name can also be changed in ",(0,s.jsx)(n.code,{children:"getModelForClass"})," or ",(0,s.jsx)(n.code,{children:"buildSchema"})," calls."]})}),"\n",(0,s.jsx)(n.h2,{id:"schemaoptions-collection",children:"SchemaOptions collection"}),"\n",(0,s.jsxs)(n.p,{children:["For this to work, ",(0,s.jsx)(n.code,{children:"{ options: { automaticName } }"})," must be true."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"{ schemaOptions: { collection } }"})," can be used to set a custom collection a model should use.\nUsing ",(0,s.jsx)(n.code,{children:"{ schemaOptions: { collection } }"})," with ",(0,s.jsx)(n.code,{children:"automaticName"})," automatically adds a suffix of the collection to the model's name."]}),"\n",(0,s.jsxs)(n.p,{children:["Example without ",(0,s.jsx)(n.code,{children:"automaticName"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@modelOptions({ schemaOptions: { collection: 'Something' } })\nclass MultiModel {}\n\nconst model = getModelForClass(MultiModel);\nexpect(model.modelName).to.be.equal('MultiModel');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Example with ",(0,s.jsx)(n.code,{children:"automaticName"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@modelOptions({ schemaOptions: { collection: 'Something' }, options: { automaticName: true } })\nclass MultiModel {}\n\nconst model = getModelForClass(MultiModel);\nexpect(model.modelName).to.be.equal('MultiModel_Something');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"typegoose-custom-options-customname",children:'Typegoose Custom Options "customName"'}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"{ options: { customName } }"})," can be used to set a custom model name."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@modelOptions({ options: { customName: 'CustomName' } })\nclass CustomNameOption {}\n\nconst model = getModelForClass(CustomNameOption);\nexpect(model.modelName).to.be.equal('CustomName');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.code,{children:"{ options: { customName } }"})," is used with ",(0,s.jsx)(n.code,{children:"{ options: { automaticName: true } }"}),", then it will be used as a ",(0,s.jsx)(n.em,{children:"suffix"})," of the normal name."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"@modelOptions({ options: { customName: 'CustomName', automaticName: true } })\nclass CustomNameOption {}\n\nconst model = getModelForClass(CustomNameOption);\nexpect(model.modelName).to.be.equal('CustomNameOption_CustomName');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"disable-caching",children:"Disable Caching"}),"\n",(0,s.jsxs)(n.p,{children:["Since Typegoose ",(0,s.jsx)(n.code,{children:"10.2.0"})," there is also the option of disabling the cache globally with ",(0,s.jsx)(n.a,{href:"/typegoose/versions/beta/docs/api/functions/set-global-options",children:(0,s.jsx)(n.code,{children:"setGlobalOptions"})}),"'s ",(0,s.jsx)(n.a,{href:"/typegoose/versions/beta/docs/api/functions/set-global-options#disableglobalcaching",children:(0,s.jsx)(n.code,{children:"disableGlobalCaching"})})," or locally via ",(0,s.jsx)(n.a,{href:"/typegoose/versions/beta/docs/api/decorators/model-options#disablecaching",children:(0,s.jsx)(n.code,{children:"@modelOptions"})}),"."]}),"\n",(0,s.jsxs)(l.A,{groupId:"caching-global-local",children:[(0,s.jsx)(i.A,{value:"global",label:"Disable Cache globally",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { setGlobalOptions, getModelForClass, prop } from \"@typegoose/typegoose\";\n\nsetGlobalOptions({ globalOptions: { disableGlobalCaching: true } });\n\nclass Kitten {\n  @prop()\n  public name: string;\n}\n\nconst KittenModelDefault = getModelForClass(Kitten);\nconst KittenModelCon1 = getModelForClass(Kitten, { existingConnection: mongoose.createConnection() });\n\n// OR\n{\n  class Kitten {\n    @prop()\n    public name: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten);\n  assert.ok(!!KittenModel.schema.path('name'));\n}\n{\n  class Kitten {\n    @prop()\n    public nameTag: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten, { existingConnection: mongoose.createConnection() }); // still requires being defined on a different connection / mongoose instance\n  assert.ok(!!KittenModel.schema.path('nameTag'));\n}\n"})})}),(0,s.jsx)(i.A,{value:"local",label:"Disable Cache locally",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { modelOptions, getModelForClass, prop } from \"@typegoose/typegoose\";\n\n@modelOptions({ options: { disableCache: true } })\nclass Kitten {\n  @prop()\n  public name: string;\n}\n\nconst KittenModelDefault = getModelForClass(Kitten);\nconst KittenModelCon1 = getModelForClass(Kitten, { existingConnection: mongoose.createConnection() });\n\n// OR\n{\n  class Kitten {\n    @prop()\n    public name: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten, { options: { disableCaching: true } });\n  assert.ok(!!KittenModel.schema.path('name'));\n}\n{\n  class Kitten {\n    @prop()\n    public nameTag: string;\n  }\n\n  const KittenModel = getModelForClass(Kitten, { existingConnection: mongoose.createConnection(), options: { disableCaching: true } }); // still requires being defined on a different connection / mongoose instance\n  assert.ok(!!KittenModel.schema.path('nameTag'));\n}\n"})})})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Models still cannot be defined more than once in the same connection / mongoose instance."})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Setting the Cache to be disabled globally will make some functions that rely on it error, see ",(0,s.jsx)(n.a,{href:"/typegoose/versions/beta/docs/guides/error-warning-details#cache-disabled-e033",children:(0,s.jsx)(n.code,{children:"E033"})})," and ",(0,s.jsx)(n.a,{href:"/typegoose/versions/beta/docs/api/functions/set-global-options#disableglobalcaching",children:(0,s.jsx)(n.code,{children:"disableGlobalCaching"})})," which effects it will have."]})}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(n.p,{children:["For more details on the usage of these naming features, please look into ",(0,s.jsx)(n.a,{href:"https://github.com/typegoose/typegoose/blob/r6/master/test/tests/customName.test.ts",children:"the tests that are written for them."})]}),"\n",(0,s.jsxs)(n.p,{children:["See also ",(0,s.jsx)(n.a,{href:"/typegoose/versions/beta/docs/guides/advanced/name-generation",children:"Typegoose's Name Generation"})," for a complete (and hopefully simple) way to understand name generation."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var o=t(6540);const s={},a=o.createContext(s);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(a.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>l});t(6540);var o=t(4164);const s={tabItem:"tabItem_Ymn6"};var a=t(4848);function l(e){let{children:n,hidden:t,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(s.tabItem,l),hidden:t,children:n})}}}]);